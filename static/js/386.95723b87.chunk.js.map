{"version":3,"file":"static/js/386.95723b87.chunk.js","mappings":"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","sources":["views/ui/Games.js"],"sourcesContent":["import {\n    AccordionBody,\n    AccordionHeader,\n    AccordionItem,\n    Button,\n    Card,\n    CardBody,\n    CardSubtitle,\n    CardText,\n    CardTitle,\n    Col,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n    Row,\n    UncontrolledAccordion\n} from \"reactstrap\";\nimport {GamesJson} from \"../../static/GamesJson\";\nimport React from \"react\";\n\nimport Image from 'react-bootstrap/Image';\n\nimport {useNavigate} from \"react-router\";\nimport {NavHashLink} from \"react-router-hash-link\";\nimport queryString from 'query-string'\n\n\n\nconst Games = () => {\n    var alf = Array.from(new Set(GamesJson.map((nt) => nt.title[0])))\n    console.log(alf)\n\n    const query = queryString.parse(window.location.search);\n    console.log(window.location.search)\n    let players = query.players\n\n    let navigate = useNavigate();\n    return (\n        <div>\n            <div>\n                <div>\n                    <UncontrolledAccordion\n                        toggle={function noRefCheck() {\n                        }}\n                    >\n                        <AccordionItem>\n                            <AccordionHeader targetId=\"1\">\n                                Фильтр\n                            </AccordionHeader>\n                            <AccordionBody accordionId=\"1\">\n                                <Form>\n                                    <FormGroup row>\n                                        <Label\n                                            for=\"exampleSelect\"\n                                            sm={3}>\n                                            Для количество игроков\n                                        </Label> <Row>\n\n                                        {alf.map((s, index) => {\n                                            return (\n                                                <Col>\n                                                    <NavHashLink style={{textDecoration: 'none'}} smooth\n                                                                 to={`#${s}`}>{s}</NavHashLink>\n\n                                                </Col>\n\n                                            )\n                                        })}\n                                    </Row>\n\n\n                                        <Col sm={2}>\n                                            <Input\n                                                defaultValue={players === undefined ? 1 : players}\n                                                id=\"players\"\n                                                name=\"players\"\n                                                type=\"select\">\n                                                <option>\n                                                </option>\n                                                <option>\n                                                    1\n                                                </option>\n                                                <option>\n                                                    2\n                                                </option>\n                                                <option>\n                                                    3\n                                                </option>\n                                                <option>\n                                                    4\n                                                </option>\n                                                <option>\n                                                    5\n                                                </option>\n                                                <option>\n                                                    6\n                                                </option>\n                                                <option>\n                                                    7\n                                                </option>\n                                                <option>\n                                                    8\n                                                </option>\n                                                <option>\n                                                    9\n                                                </option>\n                                            </Input>\n                                        </Col>\n                                        <Label\n                                            for=\"exampleSelect\">\n                                        </Label>\n                                        <Col\n                                            sm={{\n                                                size: 1\n                                            }}>\n                                            <Button>\n                                                Поиск\n                                            </Button>\n                                        </Col>\n                                        <Label\n                                            for=\"exampleSelect\">\n                                        </Label>\n                                        <Col>\n                                            <Button onClick={() => {\n                                                const url = new URL(window.location);\n                                                url.searchParams.delete('players');\n                                                window.history.replaceState(null, null, url)\n                                                navigate(`/games`)\n                                            }}>\n                                                Очистить\n                                            </Button>\n                                        </Col>\n                                    </FormGroup>\n                                </Form>\n\n                            </AccordionBody>\n                        </AccordionItem>\n                    </UncontrolledAccordion>\n                </div>\n            </div>\n            <br/>\n            <Row>\n                {GamesJson.map((nt, index) => {\n                    const src = require(`/src/assets/images/game/${nt.id}.jpg`);\n\n                    if ((players === undefined || players === '' || nt.playersMin <= players) && (players === undefined || players === '' || nt.playersMax >= players)) {\n                        return (\n                            <Col sm=\"6\" lg=\"6\" xl=\"3\" key={index}>\n                                <Card>\n                                    <div style={{position: 'relative'}}>\n                                        <div>{nt.isExtension ? <span style={{\n                                            position: 'absolute',\n                                            top: '8px',\n                                            color: \"#ffffff\",\n                                            backgroundColor: \"#3db13d\"\n                                        }}>дополнение</span> : \"\"}</div>\n                                              <div style={{\n                                                            position: 'absolute',\n                                                            top: '-15px',\n                                                            right: '-15px',\n                                                        }}> <Image style={{border: '3px solid  #2962ff',}} src={nt.owner} roundedCircle /></div>\n                                        <div name={nt.title[0]} id={nt.title[0]} className=\"card-img\" style={{\n                                            backgroundSize: \"cover\",\n                                            backgroundPosition: \"center\",\n                                            paddingBottom: \"100%\",\n                                            width: \"100%\",\n                                            backgroundImage: `url(${src})`\n                                        }}>\n                                        </div>\n                                    </div>\n\n                                    <CardBody className=\"p-4\" name={nt.title[0]} id={nt.title[0]}>\n                                        <CardTitle tag=\"h5\">{nt.title}</CardTitle>\n                                        <CardSubtitle\n                                            className=\"text-primary\">от {nt.playersMin} до {nt.playersMax} игроков</CardSubtitle>\n                                        <CardSubtitle\n                                            className=\"text-primary\">{nt.time}</CardSubtitle>\n                                        <CardText className=\"mt-3 truncate-text\">\n                                            <div className=\"mt-3 truncate-text\"\n                                                 dangerouslySetInnerHTML={{__html: nt.descriptionShort}}/>\n                                        </CardText>\n                                        <Button style={{opacity: 0, height: '0px', width: '0px', padding: 0}}></Button>\n                                        <Button style={{zIndex: 20, position: 'absolute'}} color=\"primary\"\n                                                onClick={() => navigate(`/games/${nt.id}`)}>Читать\n                                            далее</Button>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        );\n                    }\n                })}\n            </Row>\n        </div>\n    );\n};\n\nexport default Games;\n"],"names":["alf","Array","from","Set","GamesJson","nt","title","console","log","query","queryString","window","location","search","players","navigate","useNavigate","_jsxs","children","_jsx","UncontrolledAccordion","toggle","AccordionItem","AccordionHeader","targetId","AccordionBody","accordionId","Form","FormGroup","row","Label","for","sm","Row","map","s","index","Col","NavHashLink","style","textDecoration","smooth","to","concat","Input","defaultValue","undefined","id","name","type","size","Button","onClick","url","URL","searchParams","delete","history","replaceState","src","require","playersMin","playersMax","lg","xl","Card","position","isExtension","top","color","backgroundColor","right","Image","border","owner","roundedCircle","className","backgroundSize","backgroundPosition","paddingBottom","width","backgroundImage","CardBody","CardTitle","tag","CardSubtitle","time","CardText","dangerouslySetInnerHTML","__html","descriptionShort","opacity","height","padding","zIndex"],"sourceRoot":""}